def add(a, b):
    return a + b
result = add(8912384, 1)
print("Результат сложения:", result)

# Задача 1 (Функции в Python / Создание и вызов функций)
# Напиши функцию greet(name), которая принимает один аргумент name и выводит строку в формате:
# "Привет, [name]!".

def greet(name):
    print(f"Привет, {name}!")
greet("Анна")
greet("Петр")

# Напиши функцию multiply(a, b=1), которая:
# Принимает два аргумента: a и b (по умолчанию b = 1).
# Возвращает произведение a * b.

def multiply(a, b=2):
    return a * b
print(multiply(5, 3))
print(multiply(9))

# Напиши декоратор @uppercase, который будет преобразовывать возвращаемую строку функции в верхний регистр.
# Требования:
# Декоратор должен принимать функцию и возвращать новую функцию-обёртку.
# Результат работы исходной функции должен быть строкой (иначе можно вызвать ошибку).

def my_decorator(orig):
    def wrapper():
        print("Действие перед вызовом функции")  # Предусловие
        orig()  # Вызов оригинальной функции
        print("Действие после вызова функции")  # Постусловие
        print("И завершена хорошо") # 2 Постусловие
    return wrapper


@my_decorator
def say_hello():
    print("Привет!")

say_hello()

# Создай декоратор @repeat_two_times, который заставляет функцию выполняться дважды и выводить результат два раза.
# Условия:
# Функция, которую мы декорируем, принимает только один аргумент (например, name).
# Декоратор просто вызывает её два раза подряд.

def repeat_two_times(func):
    def wrapper2(name):
        func(name)
        func(name)
    return wrapper2

@repeat_two_times
def greeter(name):
    print(f"Привет, {name}!")

greeter("Анна")

