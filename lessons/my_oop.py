# Создай класс Car. В конструкторе (__init__ методе) определи атрибут color, который должен задаваться при создании объекта.

class Car: # Создал класс
    def __init__(self, color): # Создал конструктор который принимает параметр color
        self.color = color # использовал self.color = color для сохранения переданного значения в атрибут объекта


# Создай класс Dog. Добавь метод bark, который печатает в консоль "Гав!".

class Dog:
    def bark(self): # Создаю метод
        print("Гав!") # Метод печатает в консоль "Гав!"


# Создай класс Lamp с атрибутом is_on = False. Создай объект этого класса с именем desk_lamp и выведи на экран значение его атрибута is_on.

class Lamp:
    def __init__(self):
        self.is_on = False # Просто присваиваем False

desk_lamp = Lamp() # Создаем объект
print(desk_lamp.is_on) # Выводим значение атрибута


# Создай класс Book. Добавь в него атрибут класса cover_material со значением "бумага".

class Book:
    cover_material = "бумага" # Это атрибут класса


# В классе Cat создай метод say_meow, который обращается к атрибуту объекта name (который задается в конструкторе) и печатает "{имя кошки} говорит Мяу!". Покажи, как бы ты обратился к этому методу из объекта.

class Cat:
    def __init__(self, name):
        self.name = name # сохраняем имя в атрибут объекта

    def say_meow(self):
        print(f"{self.name} говорит Мяу") # используем сохраненное имя

# Создаем объект и вызываем метод
my_cat = Cat("Барсик")
my_cat.say_meow()





